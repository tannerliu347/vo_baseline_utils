from asyncore import write
from enum import unique
import numpy as np
import cv2
import os
import argparse
import matplotlib.pyplot as plt

def read_mapping(filename):
    """reads the 0-9 mapping txt file generated by segment_classes.py 
    """
    new_mapping = dict()
    with open(filename, 'r') as f:
        for line in f:
            airsim, ours = line.strip().split(':')
            airsim, ours = int(airsim), int(ours)
            new_mapping[airsim] = ours
    return new_mapping

def visualize_seg(mapping, seg_dir):
    """visualize segmentation according to the given mapping
    """
    for file in sorted(os.listdir(seg_dir)):
        abs_path = os.path.join(seg_dir, file)
        seg = np.load(abs_path)
        new_seg = np.zeros_like(seg)
        for r in range(seg.shape[0]):
            for c in range(seg.shape[1]):
                new_seg[r, c] = mapping[seg[r, c]]
        fig, ax = plt.subplots()
        ax.matshow(new_seg, cmap=plt.cm.RdBu)
        plt.show()




if __name__ == '__main__':
    # parse optional arguments
    parser = argparse.ArgumentParser(description='Needs a tartan air trajectory directory. \
                                                  e.g. python3 segment_classes.py /home/USER/TartanAir/abandonedfactory/Easy/P001/')
    parser.add_argument('trj_dir', metavar='trj_dir', nargs='+',
                        help='path to tartan air trajectory folder')
    args = parser.parse_args()
    dir = args.trj_dir[0]
    mapping = read_mapping(os.path.join(dir, 'seg_map.txt'))
    visualize_seg(mapping, os.path.join(dir, 'seg_left/'))